version: '3.4'
x-common-variables: &common-variables
   DATABASE_NAME: test
   DATABASE_USERNAME: postgres
   DATABASE_PASSWORD: SuperSecret
   ALLOWED_ORIGINS: http://localhost,http://localhost:8000,http://localhost:8080,http://localhost:5050,http://localhost:3000
   DATABASE_HOST: db

services:
  traefik:
      image: traefik:v2.6
      container_name: traefik
      ports:
        - "80:80"
        - "8080:8080"
        - "443:443"
        - "5432:5432"
      volumes:
        #- traefik-ssl-certs:/ssl-certs
        - ./configs/:/etc/traefik
        - /var/run/docker.sock:/var/run/docker.sock:ro

  db:
    image: postgres:13
    container_name: postgres
    volumes:
      - app-db-data:/var/lib/postgresql/data
    env_file: 
      - .env
    labels:
      - traefik.enable=true
      - traefik.tcp.routers.db.rule=HostSNI(`*`)
      - traefik.tcp.services.db.loadbalancer.server.port=5432
      - traefik.tcp.routers.db.entrypoints=postgres

  shift_service:
    container_name: shift_service
    build: 
      target: dev
      args:
        POETRY_VERSION: 1.8.3
        PROJECT_DIR: shift_service
      dockerfile: docker/api.dockerfile
      context: .
    depends_on: 
      - db
      - traefik
    environment: 
      <<: *common-variables
    labels:
      - traefik.enable=true
      - traefik.http.routers.shiftService.entrypoints=web
      - traefik.http.routers.shiftService.rule=Host(`localhost`)
      - traefik.http.routers.shiftService.rule=PathPrefix(`/v1`, `/ping`, `/token`)

  pgadmin4:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      <<: *common-variables
      PGADMIN_DEFAULT_EMAIL: user@domain.com
      PGADMIN_DEFAULT_PASSWORD: SuperSecret
      SCRIPT_NAME: /pgadmin
    depends_on:
      - db
      - traefik
    labels:
      - traefik.enable=true
      - traefik.http.routers.pgadminService.entrypoints=web
      - traefik.http.routers.pgadminService.rule=PathPrefix(`/pgadmin`)
  
  dashboard:
    container_name: dashboard
    build:
      context: simple-dashboard
      dockerfile: ../docker/dashboard.dockerfile
      args:
        REACT_APP_HOST: localhost
        REACT_APP_PORT: 80
    depends_on:
      - traefik
      - shift_service
    labels:
      - traefik.enable=true
      - traefik.http.routers.dashboardService.rule=PathPrefix(`/`)

volumes:
  app-db-data:
  #ssl volume for traefik
  #traefik-ssl-certs:
  # driver: local
